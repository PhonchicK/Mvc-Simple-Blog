@model IEnumerable<MvcSimpleBlog.Entities.Concrete.Blog>
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "Category Details";
    string ScrubHtml(string value)
    {
        var step1 = Regex.Replace(value, @"<[^>]+>|&nbsp;", "").Trim();
        var step2 = Regex.Replace(step1, @"\s{2,}", " ");
        return step2;
    }//For delete html tags from blog content
}
@foreach (var item in Model)
{
    <div class="card rounded-0 shadow-sm">
        <div class="card-header">
            <span>By</span>
            <span class="text-success"><a>@item.User.Username</a></span>
            <span>On</span>
            <span class="text-success">@item.Date.Value.ToLongDateString()</span>
        </div>
        <div class="card-body">
            <img class="card-img-top" src="@item.Image" alt="@item.Title">
            <hr>
            <h2 class="card-title">@item.Title</h2>

            <p class="card-text">@( ScrubHtml(item.Content).Length > 199 ? ScrubHtml(item.Content).Substring(0, 200) : ScrubHtml(item.Content))</p>
            @Html.ActionLink("Read more", "Details", new { item.SeoUrl }, new { @class = "btn btn-primary" })
        </div>
    </div>
}
<!--PAGINATION-->
<nav class="ml-4">
    <ul class="pagination">
        @if (ViewBag.page != 1)
        {
            <li class="page-item">
                @Html.ActionLink("Previous", "Category", new { page = ViewBag.page - 1 }, new { @class = "page-link" })
            </li>
        }
        @for (int i = 1; i <= ViewBag.pageCount; i++)
        {
            <li class="page-item@(i == ViewBag.page ? " active" : "")">
                @Html.ActionLink(i.ToString(), "Category", new { page = i }, new { @class = "page-link" })
            </li>

        }
        @if (ViewBag.page < ViewBag.pageCount)
        {
            <li class="page-item">
                @Html.ActionLink("Next", "Category", new { page = ViewBag.page + 1 }, new { @class = "page-link" })
            </li>
        }
    </ul>
</nav>
<!--END PAGINATION-->